{"version":3,"sources":["images/ARROWOPEN.svg","images/ARROWCLOSE.svg","images/LOGO.svg","images/deletePlanet.svg","components/Logo.js","components/TableRow.js","components/PlanetTable.js","components/PlanetBoard.js","containers/Movie.js","components/MovieBoard.js","components/PlanetList.js","components/SelectedPlanets.js","containers/AddForm.js","components/AddBoard.js","containers/AddMovie.js","components/AddedMovies.js","containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","src","logo","alt","TableRow","_ref","data","name","rotation_period","orbital_period","diameter","climate","surface_water","population","align","PlanetTable","planetList","addedPlanetList","planetDetails","loadingPlanets","active","addedMovieDetails","length","map","planet","index","components_TableRow","key","undefined","planets","colSpan","react_spinners","sizeUnit","size","color","loading","PlanetBoard","components_PlanetTable","Movie","state","movieDetails","handleCollapse","_this","setState","prevState","addedPlanetsDetails","handleFetchPlanet","apis","forEach","api","fetch","then","response","ok","json","Error","status","concat","Object","toConsumableArray","catch","error","console","log","this","props","movie","style","marginBottom","umd","backgroundColor","minHeight","padding","width","userSelect","onClick","title","movieTitle","arrowClose","arrowOpen","components_PlanetBoard","React","Component","MovieBoard","movieList","movies","loadingMovies","addedMovies","movieBoardStyles","borderBottom","paddingBottom","containers_Movie","episode_id","lading","PlanetList","handlePlanetSelection","SelectedPlanets","selectedPlanets","handleDeletePlanet","lis","e","deletePlanet","AddForm","planetName","selectedPlanetsWithDetails","errors","capitalLetter","movieTitleLength","messages","capitalLetter_incorrect","movieTitleLength_incorrect","handleAddMovieTitle","target","value","formValidation","word","correct","toLowerCase","handleSubmit","preventDefault","validation","handleAddMovie","handleSearch","results","indexOf","filter","prevProps","_this2","titleRed","autoComplete","onSubmit","htmlFor","type","id","placeholder","onChange","components_SelectedPlanets","components_PlanetList","AddBoard","containers_AddForm","AddMovie","components_AddBoard","AddedMovies","listOfMovies","App","components_Logo","components_MovieBoard","components_AddedMovies","containers_AddMovie","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.6c09a29d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ARROWOPEN.4d66597d.svg\";","module.exports = __webpack_public_path__ + \"static/media/ARROWCLOSE.9f3a719a.svg\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.8b6d4945.svg\";","module.exports = __webpack_public_path__ + \"static/media/deletePlanet.4b823e92.svg\";","import React from 'react';\r\nimport logo from '../images/LOGO.svg';\r\n\r\nconst Logo = () => {\r\n  return <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst TableRow = ({data}) => {\r\n  return (  \r\n    <tbody>\r\n    <tr className=\"desktop\">\r\n        <td>{data.name}</td>\r\n        <td>{data.rotation_period}</td>\r\n        <td>{data.orbital_period}</td>\r\n        <td>{data.diameter}</td>\r\n        <td>{data.climate}</td>\r\n        <td>{data.surface_water}</td>\r\n        <td>{data.population}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Planet Name</td>\r\n        <td align=\"left\">{data.name}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Rotation period</td>\r\n        <td align=\"left\">{data.rotation_period}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Orbital period</td>\r\n        <td align=\"left\">{data.orbital_period}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Diameter</td>\r\n        <td align=\"left\">{data.diameter}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Climate</td>\r\n        <td align=\"left\">{data.climate}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Surface water</td>\r\n        <td align=\"left\">{data.surface_water}</td>\r\n      </tr>\r\n      <tr className=\"mobile\">\r\n        <td align=\"left\">Population</td>\r\n        <td align=\"left\">{data.population}</td>\r\n      </tr>\r\n    </tbody>\r\n      \r\n  );\r\n}\r\n \r\nexport default TableRow;","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport TableRow from '../components/TableRow';\r\n\r\n\r\nconst PlanetTable = ({planetDetails, loadingPlanets, active, addedMovieDetails}) => {\r\n  let planetList \r\n  let addedPlanetList\r\n\r\n  if(planetDetails.length > 0) {\r\n    planetList = planetDetails.map((planet, index) => <TableRow key={index} data={planet} />)\r\n  }\r\n\r\n  if(addedMovieDetails[0] !== undefined) {\r\n    addedPlanetList = addedMovieDetails[0].planets.map((planet, index) => <TableRow key={index} data={planet} />)\r\n  }\r\n\r\n\r\n  return (  \r\n    <table className=\"planetTable\">\r\n      <thead>\r\n        <tr>\r\n          <th><span>Planet Name</span> <span></span></th>\r\n          <th><span>Rotation period</span><span></span></th>\r\n          <th><span>Orbital period</span><span></span></th>\r\n          <th><span>Diameter</span><span></span></th>\r\n          <th><span>Climate</span><span></span></th>\r\n          <th><span>Surface water</span><span></span></th>\r\n          <th><span>Population</span><span></span></th>\r\n        </tr>\r\n      </thead>\r\n          {(loadingPlanets && active && addedMovieDetails[0] === undefined) &&  <tbody><tr className=\"planetLoader\"><td colSpan={7}><ClipLoader sizeUnit={\"px\"} size={50} color={'#1BA1BE'} loading={loadingPlanets} /></td></tr></tbody>}\r\n          {!loadingPlanets && planetList}\r\n          {addedMovieDetails[0] !== undefined && addedPlanetList}\r\n    </table>\r\n  )\r\n}\r\n \r\nexport default PlanetTable;","import React from 'react';\r\nimport PlanetTable from '../components/PlanetTable';\r\n\r\n\r\nconst PlanetBoard = ({planetDetails, loadingPlanets, active, addedMovieDetails}) => {\r\n  return (  \r\n      <PlanetTable \r\n        addedMovieDetails={addedMovieDetails}\r\n        planetDetails={planetDetails} \r\n        loadingPlanets={loadingPlanets}\r\n        active={active}\r\n      />\r\n);\r\n}\r\n\r\n \r\nexport default PlanetBoard;","import React from 'react';\r\nimport arrowOpen from '../images/ARROWOPEN.svg';\r\nimport arrowClose from '../images/ARROWCLOSE.svg';\r\nimport PlanetBoard from '../components/PlanetBoard';\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemTitle,\r\n  AccordionItemBody,\r\n} from 'react-accessible-accordion';\r\n\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\r\n\r\nclass Movie extends React.Component {\r\n\r\n  state = {\r\n    active: false,\r\n    loadingPlanets: true,\r\n    movieDetails: null,\r\n    planetDetails: [],\r\n    addedMovieDetails: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      movieDetails: this.props.movie,\r\n      addedMovieDetails: [...this.state.addedMovieDetails, this.props.addedMovieDetails]\r\n    })\r\n  }\r\n\r\n  componentWillUpdate() {\r\n\r\n    if(this.state.active && this.state.movieDetails) {\r\n      if(this.state.movieDetails.planets.length === this.state.planetDetails.length + 1) {\r\n        this.setState({\r\n          loadingPlanets: false\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleCollapse = () => {\r\n\r\n    if(!this.state.active) {\r\n      this.setState(prevState => {\r\n        return {\r\n          active: !prevState.active\r\n        }\r\n      })\r\n\r\n      if(this.state.movieDetails !==  undefined) {\r\n        this.handleFetchPlanet(this.state.movieDetails.planets);\r\n      }\r\n      \r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          active: !prevState.active,\r\n          planetDetails: [],\r\n          loadingPlanets: true,\r\n          addedPlanetsDetails: []\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleFetchPlanet = (apis) => {\r\n      const apisList = apis;\r\n      apisList.forEach(api => {\r\n        fetch(api)\r\n        .then(response => {\r\n          if(response.ok) {\r\n           return response.json()\r\n          }\r\n          throw Error(response.status)\r\n        })\r\n        .then(data => {\r\n          this.setState(prevState => {\r\n            return {\r\n              planetDetails: [...prevState.planetDetails, data]\r\n            }\r\n          })\r\n        })\r\n        .catch(error => console.log(error))\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const headerStyle = {\r\n      backgroundColor: '#fff',\r\n      minHeight: '48px',\r\n      padding: '0',\r\n      width: '100%',\r\n      userSelect: 'none'\r\n    }\r\n  \r\n    const headerElem = {\r\n      minHeight: '48px',\r\n      padding: '0'\r\n    }\r\n    \r\n    const activeMargin = {\r\n      marginBottom: '16px',\r\n    }\r\n\r\n  \r\n\r\n    return(\r\n      <li style={this.state.active ? activeMargin : null} className=\"movie\">\r\n        <Accordion style={headerStyle}>\r\n          <AccordionItem>\r\n              <AccordionItemTitle style={headerElem}>\r\n                <div className=\"headerContainer\" onClick={this.handleCollapse}>\r\n                  <p className=\"movieTitle\">{this.props.movie && this.props.movie.title} {this.props.addedMovieDetails !==undefined && this.props.addedMovieDetails.movieTitle}</p>\r\n                  <img className=\"arrow\" src={this.state.active ? arrowClose : arrowOpen } alt=\"open arrow\"/>\r\n                </div>\r\n              </AccordionItemTitle>\r\n              <AccordionItemBody>\r\n                <PlanetBoard \r\n                  planetDetails={this.state.planetDetails}\r\n                  addedMovieDetails={this.state.addedMovieDetails}\r\n                  loadingPlanets={this.state.loadingPlanets}\r\n                  active={this.state.active}\r\n                />\r\n              </AccordionItemBody>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n \r\nexport default Movie;","import React from 'react';\r\nimport Movie from '../containers/Movie';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nconst MovieBoard = ({movies, loadingMovies, addedMovies}) => {\r\n\r\n  let movieList\r\n  let movieBoardStyles = {\r\n    borderBottom: '2px dashed #fff',\r\n    marginBottom: '32px',\r\n    paddingBottom: '16px'\r\n  }\r\n\r\n  if(movies !== null) {\r\n    movieList = movies.map(movie => (\r\n      <Movie key={movie.episode_id} movie={movie} />\r\n    ))\r\n  }\r\n\r\n  if(addedMovies.length > 0) {\r\n    movieBoardStyles = null\r\n  }\r\n\r\n  return (  \r\n    <ul style={movieBoardStyles} className=\"movieBoard\">\r\n      {loadingMovies ? <div className=\"movieLoader\"><ClipLoader sizeUnit={\"px\"} size={50} color={'#1BA1BE'} lading={loadingMovies} /></div> : movieList }\r\n    </ul>\r\n  );\r\n}\r\n \r\nexport default MovieBoard;","import React from 'react';\r\n\r\nconst PlanetList = ({planets, handlePlanetSelection}) => {\r\n  let planetList = planets.map(planet => <li onClick={() => handlePlanetSelection(planet.name)} key={planet.name}>{planet.name}</li>)\r\n  return (  \r\n    <ul className=\"planetList\">\r\n      {planetList}\r\n    </ul>\r\n  );\r\n}\r\n \r\nexport default PlanetList;","import React from 'react';\r\nimport deletePlanet from '../images/deletePlanet.svg'\r\n\r\nconst SelectedPlanets = ({selectedPlanets, handleDeletePlanet}) => {\r\n\r\n  let lis = selectedPlanets.map(planet => <li key={planet}>{planet} <button onClick={(e) => handleDeletePlanet(e, planet)}><img src={deletePlanet} alt=\"delete planet button\"/></button></li>)\r\n\r\n  return (  \r\n    <ul className=\"selectedPlanets\">{lis}</ul>\r\n  );\r\n}\r\n \r\nexport default SelectedPlanets;","import React from 'react';\r\nimport PlanetList from '../components/PlanetList';\r\nimport SelectedPlanets from '../components/SelectedPlanets';\r\n\r\n\r\nclass AddForm extends React.Component {\r\n\r\n  state = {\r\n    movieTitle: '',\r\n    planetName: '',\r\n    planets: [],\r\n    selectedPlanets: [],\r\n    selectedPlanetsWithDetails: [],\r\n    errors: {\r\n      capitalLetter: false,\r\n      movieTitleLength: false\r\n    }\r\n  }\r\n\r\n  messages = {\r\n    capitalLetter_incorrect: 'Movie title must start with a capital letter',\r\n    movieTitleLength_incorrect: 'Movie title must be at least three letters long'\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.active !== this.props.active) {\r\n      this.setState({\r\n        movieTitle: '',\r\n        planetName: '',\r\n        planets: [],\r\n        selectedPlanets: [],\r\n        selectedPlanetsWithDetails: [],\r\n        errors: {\r\n          capitalLetter: false,\r\n          movieTitleLength: false\r\n        }\r\n      })\r\n    }\r\n\r\n    if(prevState.selectedPlanets !== this.state.selectedPlanets) {\r\n      if(this.state.selectedPlanets[this.state.selectedPlanets.length-1] !== undefined && this.state.selectedPlanets.length > prevState.selectedPlanets.length) {\r\n        fetch(`https://swapi.co/api/planets?search=${this.state.selectedPlanets[this.state.selectedPlanets.length-1]}`)\r\n        .then(response => {\r\n          if(response.ok) {\r\n            return response.json()\r\n          }\r\n          throw Error(response.status)\r\n        })\r\n        .then(data => {\r\n          this.setState(prevState => {\r\n            return {\r\n              selectedPlanetsWithDetails: [...prevState.selectedPlanetsWithDetails, data.results]\r\n            }\r\n          })\r\n        })\r\n        .catch(error => console.log(error))\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  handleAddMovieTitle = (e) => {\r\n    this.setState({\r\n      movieTitle: e.target.value\r\n    })\r\n  }\r\n\r\n  formValidation = () => {\r\n    let capitalLetter = false;\r\n    let movieTitleLength = false;\r\n    let correct = false;\r\n\r\n    const initialIsCaptial = word => {\r\n      return word[0] !== word[0].toLowerCase();\r\n    }\r\n\r\n    if(this.state.movieTitle && initialIsCaptial(this.state.movieTitle)) {\r\n      capitalLetter = true;\r\n    }\r\n\r\n    if(this.state.movieTitle.length > 2) {\r\n      movieTitleLength = true;\r\n    }\r\n\r\n    if(capitalLetter && movieTitleLength) {\r\n      correct = true;\r\n    }\r\n\r\n    return({\r\n      capitalLetter,\r\n      movieTitleLength,\r\n      correct\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = this.formValidation();\r\n    \r\n    if(validation.correct) {\r\n      this.props.handleAddMovie(this.state.selectedPlanetsWithDetails, this.state.movieTitle)\r\n      this.setState({\r\n        movieTitle: '',\r\n        planetName: '',\r\n        planets: [],\r\n        selectedPlanets: [],\r\n        selectedPlanetsWithDetails: [],\r\n        errors: {\r\n          capitalLetter: false,\r\n          movieTitleLength: false\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({\r\n        errors: {\r\n          capitalLetter: !validation.capitalLetter,\r\n          movieTitleLength: !validation.movieTitleLength\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSearch = (e) => {\r\n    if(e.target.value.length !== 0) {\r\n      fetch(`https://swapi.co/api/planets?search=${e.target.value}`)\r\n      .then(response => {\r\n        if(response.ok) {\r\n          return response.json()\r\n        }\r\n        throw Error(response.status)\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          planets: [...data.results]\r\n        })\r\n      })\r\n      .catch(error => console.log(error))\r\n    } else {\r\n      this.setState({\r\n        planets: []\r\n      })\r\n    }\r\n      \r\n    this.setState({\r\n      planetName: e.target.value\r\n    })\r\n  }\r\n\r\n  handlePlanetSelection = planetName => { \r\n    if(this.state.selectedPlanets.indexOf(planetName) === -1) {\r\n      this.setState(prevState => {\r\n        return {\r\n          selectedPlanets: [...prevState.selectedPlanets, planetName]\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDeletePlanet = (e, planetName) => {\r\n    e.preventDefault();\r\n    const selectedPlanets = this.state.selectedPlanets.filter(planet => planet !== planetName)\r\n    const selectedPlanetsWithDetails = this.state.selectedPlanetsWithDetails.filter(planet => planet[0].name !== planetName)\r\n    this.setState({\r\n      selectedPlanets,\r\n      selectedPlanetsWithDetails\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let titleRed\r\n\r\n    if(this.state.errors.capitalLetter || this.state.errors.movieTitleLength) {\r\n      titleRed = {\r\n        color: 'red'\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n      <form autoComplete=\"off\" className=\"addForm\" onSubmit={this.handleSubmit}>\r\n        <label style={titleRed} htmlFor=\"movieTitle\">Movie title</label>\r\n        <input type=\"text\" id=\"movieTitle\" name=\"movieTitle\" placeholder=\"Please enter the title of the movie\" value={this.state.movieTitle} onChange={this.handleAddMovieTitle}/>\r\n        {(this.state.errors.capitalLetter || this.state.errors.movieTitleLength) && <span>{this.state.errors.capitalLetter && `${this.messages.capitalLetter_incorrect}. `} {this.state.errors.movieTitleLength && `${this.messages.movieTitleLength_incorrect}.`}</span>}\r\n        {this.state.selectedPlanets.length > 0 && <SelectedPlanets handleDeletePlanet={this.handleDeletePlanet} selectedPlanets={this.state.selectedPlanets}/>}\r\n        <label htmlFor=\"addPlanet\">Add Planet</label>\r\n        <input type=\"text\" id=\"addPlanet\" name=\"addPlanet\" placeholder=\"Search for the planet in database\" value={this.state.planetName} onChange={this.handleSearch}/>\r\n        {this.state.planets.length > 0 && <PlanetList handlePlanetSelection={this.handlePlanetSelection} planets={this.state.planets}/>}\r\n        <button className=\"addBtn\">Add movie</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport AddForm from '../containers/AddForm';\r\n\r\nconst AddBoard = ({active, handleAddMovie}) => {\r\n  return (  \r\n    <div className=\"addBoard\">\r\n      <AddForm \r\n        active={active} \r\n        handleAddMovie={handleAddMovie}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddBoard;","import React from 'react';\r\nimport arrowOpen from '../images/ARROWOPEN.svg';\r\nimport arrowClose from '../images/ARROWCLOSE.svg';\r\nimport AddBoard from '../components/AddBoard';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionItemTitle,\r\n  AccordionItemBody,\r\n} from 'react-accessible-accordion';\r\n\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\r\n\r\n\r\n\r\nclass AddMovie extends React.Component {\r\n\r\n  state = {\r\n    active: false,\r\n  }\r\n\r\n\r\n  handleCollapse = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        active: !prevState.active\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n      \r\n    const headerStyle = {\r\n      backgroundColor: '#fff',\r\n      minHeight: '48px',\r\n      padding: '0',\r\n      width: '100%',\r\n      userSelect: 'none'\r\n    }\r\n\r\n    const headerElem = {\r\n      minHeight: '48px',\r\n      padding: '0',\r\n      width: '100%'\r\n    }\r\n\r\n\r\n    return (\r\n      <Accordion style={headerStyle} className=\"addMovie\">\r\n        <AccordionItem>\r\n            <AccordionItemTitle style={headerElem}>\r\n              <div className=\"headerContainer\" onClick={this.handleCollapse}>\r\n                <p className=\"add\">Add Movie</p>\r\n                <img className=\"arrow\" src={this.state.active ? arrowClose : arrowOpen } alt=\"open arrow\"/>\r\n              </div>\r\n            </AccordionItemTitle>\r\n            <AccordionItemBody className={this.state.active ? 'boardContainer' : ''}>\r\n              <AddBoard \r\n                active={this.state.active}\r\n                handleAddMovie={this.props.handleAddMovie}\r\n              />\r\n            </AccordionItemBody>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n \r\nexport default AddMovie;","import React from 'react';\r\nimport Movie from '../containers/Movie';\r\n\r\nconst AddedMovies = ({addedMovies}) => {\r\n\r\n  if(addedMovies.length > 0) {\r\n    let listOfMovies = addedMovies.map(movie => <Movie key={movie.movieTitle} addedMovieDetails={movie}></Movie>)\r\n    return (  \r\n      <ul className=\"addedMovies\">{listOfMovies}</ul>\r\n    );\r\n  }else {\r\n    return null\r\n  }\r\n\r\n\r\n}\r\n \r\nexport default AddedMovies;","import React, { Component } from 'react';\r\nimport Logo  from '../components/Logo';\r\nimport MovieBoard from '../components/MovieBoard';\r\nimport AddMovie from '../containers/AddMovie';\r\nimport AddedMovies from '../components/AddedMovies';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    movies: null,\r\n    loadingMovies: true,\r\n    addedMovies: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://swapi.co/api/films/')\r\n    .then(response => {\r\n      if(response.ok) {\r\n        return response.json()\r\n      }\r\n      throw Error(response.status)\r\n    })\r\n    .then(data => {\r\n      this.setState({\r\n        movies: [...data.results],\r\n        loadingMovies: false\r\n      })\r\n    })\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  handleAddMovie = (selectedPlanetsWithDetails, movieTitle) => {\r\n    let planets = selectedPlanetsWithDetails;\r\n    let movie = {}\r\n    movie.movieTitle = movieTitle;\r\n    movie.planets = planets.map(planet => planet[0]);\r\n    this.setState({\r\n      addedMovies: [...this.state.addedMovies, movie]\r\n    })  \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Logo />\r\n        <MovieBoard \r\n          movies={this.state.movies} \r\n          loadingMovies={this.state.loadingMovies}\r\n          addedMovies={this.state.addedMovies}\r\n        />\r\n        <AddedMovies\r\n          addedMovies={this.state.addedMovies}\r\n        />\r\n        <AddMovie handleAddMovie={this.handleAddMovie} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/style.scss';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}